openapi: 3.0.0
info:
    title: 'Pastanaga API'
    version: 1.0.0
paths:
    /api/users:
        get:
            operationId: usersQuery
            parameters: []
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
    '/api/user/{id}':
        get:
            operationId: userQuery
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    schema:
                        $ref: '#/components/schemas/ID'
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /api/location-in-range:
        get:
            operationId: locationInRangeQuery
            parameters:
                -
                    in: query
                    name: id
                    required: true
                    schema:
                        $ref: '#/components/schemas/ID'
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: boolean
    '/api/objectiu/{id}':
        get:
            operationId: objectiuQuery
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    schema:
                        $ref: '#/components/schemas/ID'
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /api/angle:
        get:
            operationId: angleQuery
            parameters:
                -
                    in: query
                    name: id
                    required: true
                    schema:
                        $ref: '#/components/schemas/ID'
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: string
    /api/is-there-match:
        get:
            operationId: isThereMatchQuery
            parameters: []
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: boolean
    /api/distance-objective:
        get:
            operationId: distanceObjectiveQuery
            parameters:
                -
                    in: query
                    name: id
                    required: true
                    schema:
                        $ref: '#/components/schemas/ID'
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: number
                                format: float
    /api/status:
        get:
            operationId: statusQuery
            parameters:
                -
                    in: query
                    name: id
                    required: true
                    schema:
                        $ref: '#/components/schemas/ID'
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: string
    /api/objective-inside:
        get:
            operationId: objectiveInsideQuery
            parameters:
                -
                    in: query
                    name: id
                    required: true
                    schema:
                        $ref: '#/components/schemas/ID'
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: boolean
    /api/create-user:
        post:
            operationId: createUserMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                email:
                                    type: string
                                horari:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/InputClasse'
                            required:
                                - name
                                - email
                                - horari
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /api/delete-user:
        post:
            operationId: deleteUserMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    $ref: '#/components/schemas/ID'
                            required:
                                - id
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /api/update-last-known:
        post:
            operationId: updateLastKnownMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    $ref: '#/components/schemas/ID'
                                latitude:
                                    type: string
                                longitude:
                                    type: string
                            required:
                                - id
                                - latitude
                                - longitude
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /api/create-game:
        post:
            operationId: createGameMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties: {}
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: boolean
    /api/matar:
        post:
            operationId: matarMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    $ref: '#/components/schemas/ID'
                            required:
                                - id
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: boolean
    /api/te-classe:
        post:
            operationId: teClasseMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    $ref: '#/components/schemas/ID'
                                hora:
                                    type: integer
                                    format: int32
                                diaSetmana:
                                    type: integer
                                    format: int32
                                aula:
                                    type: string
                            required:
                                - id
                                - hora
                                - diaSetmana
                                - aula
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: boolean
    /api/spend:
        post:
            operationId: spendMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    $ref: '#/components/schemas/ID'
                                amount:
                                    type: integer
                                    format: int32
                            required:
                                - id
                                - amount
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: boolean
    /api/change-range:
        post:
            operationId: changeRangeMutation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    $ref: '#/components/schemas/ID'
                                amount:
                                    type: integer
                                    format: int32
                            required:
                                - id
                                - amount
            responses:
                '200':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
components:
    schemas:
        Query:
            type: object
            required:
                - users
                - locationInRange
                - angle
                - isThereMatch
                - status
                - objectiveInside
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                user:
                    $ref: '#/components/schemas/User'
                locationInRange:
                    type: boolean
                objectiu:
                    $ref: '#/components/schemas/User'
                angle:
                    type: string
                isThereMatch:
                    type: boolean
                distanceObjective:
                    type: number
                    format: float
                status:
                    type: string
                objectiveInside:
                    type: boolean
        User:
            type: object
            required:
                - id
                - name
                - email
                - winner
                - rang
            properties:
                id:
                    type: object
                name:
                    type: string
                email:
                    type: string
                objectiu:
                    $ref: '#/components/schemas/User'
                latitude:
                    type: string
                longitude:
                    type: string
                alive:
                    type: boolean
                monedes:
                    type: integer
                    format: int32
                winner:
                    type: boolean
                horari:
                    type: array
                    items:
                        $ref: '#/components/schemas/Classe'
                rang:
                    type: integer
                    format: int32
        Classe:
            type: object
            required:
                - aules
                - durada
                - inici
                - diaSetmana
            properties:
                aules:
                    type: string
                durada:
                    type: integer
                    format: int32
                inici:
                    type: integer
                    format: int32
                diaSetmana:
                    type: integer
                    format: int32
        Mutation:
            type: object
            required:
                - createUser
                - createGame
                - matar
                - teClasse
                - spend
                - changeRange
            properties:
                createUser:
                    $ref: '#/components/schemas/User'
                deleteUser:
                    $ref: '#/components/schemas/User'
                updateLastKnown:
                    $ref: '#/components/schemas/User'
                createGame:
                    type: boolean
                matar:
                    type: boolean
                teClasse:
                    type: boolean
                spend:
                    type: boolean
                changeRange:
                    $ref: '#/components/schemas/User'
        InputClasse:
            type: object
            required:
                - aules
                - durada
                - inici
                - diaSetmana
            properties:
                aules:
                    type: string
                durada:
                    type: integer
                    format: int32
                inici:
                    type: integer
                    format: int32
                diaSetmana:
                    type: integer
                    format: int32
        ID:
            type: string
